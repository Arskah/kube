## ArgoCD configuration
## Ref: https://github.com/argoproj/argo-cd
##
## Server
server:
  ## ArgoCD config
  ## reference https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml
  configEnabled: true
  config:
    repositories: |
      - type: git
        url: https://github.com/Arskah/git.git
      - name: argo-helm
        type: helm
        url: https://argoproj.github.io/argo-helm
  additionalApplications:
    # Recursively manage ArgoCD
    - name: argocd
      namespace: argocd
      destination:
        namespace: argocd
        server: https://kubernetes.default.svc
      project: argocd
      source:
        repoURL: https://github.com/Arskah/kube.git
        path: argocd/install-files
        targetRevision: HEAD
        helm:
          version: v3
          valueFiles:
            - values.yaml
            - ../values-override.yaml
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
    # App-of-apps
    - name: apps
      namespace: argocd
      destination:
        namespace: argocd
        server: https://kubernetes.default.svc
      project: argocd
      source:
        repoURL: https://github.com/Arskah/kube.git
        path: argocd-apps
        targetRevision: HEAD
        directory:
          recurse: true
          jsonnet: {}
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
      # App for maintaining projects
    - name: argocd-projects
      namespace: argocd
      destination:
        namespace: argocd
        server: https://kubernetes.default.svc
      project: argocd
      source:
        repoURL: https://github.com/Arskah/kube.git
        path: argocd-projects
        targetRevision: HEAD
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
  additionalProjects:
    - name: argocd
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      description: Argocd Project
      sourceRepos:
        - "*"
      destinations:
        - namespace: argocd
          server: https://kubernetes.default.svc
      clusterResourceWhitelist:
        - group: "*"
          kind: "*"
      orphanedResources:
        warn: false
